# general settings
name: EB_NAFNet_dit_threshold
model_type: ImageEventRestorationModel
scale: 1
num_gpu:  2
manual_seed: 10

datasets:
  train:
    name: gopro-h5-train
    type: H5ImageDataset

    # dataroot: ./datasets/GoPro_scer/train
    dataroot: /workspace/data/GOPRO/train

    # keep true if use events
    norm_voxel: true
    return_voxel: true

    return_gen_event: true

    return_mask: true
    use_mask: false

    filename_tmpl: '{}'
    io_backend:
      type: h5

    crop_size: 256
    use_flip: true
    use_rot: true

    # data loader settings
    use_shuffle: true
    num_worker_per_gpu: 2
    batch_size_per_gpu: 8 # 4 for 2080, 8 for titan


  val:
    name: gopro-h5-test
    type: H5ImageDataset

    # dataroot: ./datasets/test
    dataroot: /workspace/data/GOPRO/test

    norm_voxel: true  
    return_voxel: true
    return_mask: true
    use_mask: false
    return_gen_event: true

    io_backend:
      type: h5
    
    crop_size: ~
    use_flip: false
    use_rot: false

dataset_name: GoPro

# network structures
network_g:
  type: NAFNet
  width: 64
  enc_blk_nums: [1, 1, 1, 28]
  middle_blk_num: 1
  dec_blk_nums: [1, 1, 1, 1]

# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# training settings
train:
  optim_g:
    type: AdamW
    lr: !!float 1e-4
    weight_decay: !!float 1e-4
    betas: [0.9, 0.9]

  scheduler:
    type: TrueCosineAnnealingLR
    T_max: 500000
    eta_min: !!float 1e-7

  total_iter: 500000
  warmup_iter: -1 # no warm up

  # losses
  pixel_opt:
    type: PSNRLoss
    loss_weight: 1
    reduction: mean

# validation settings
val:
  val_freq: !!float 5000
  save_img: false


  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false
    # ssim:
    #   type: calculate_ssim
    #   crop_border: 0
    #   test_y_channel: false

# logging settings
logger:
  print_freq: 1000
  save_checkpoint_freq: !!float 5000
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500